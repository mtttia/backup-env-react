[{"C:\\Users\\matti\\Documents\\Progetti\\ELECTRON\\backup-env-react\\src\\index.jsx":"1","C:\\Users\\matti\\Documents\\Progetti\\ELECTRON\\backup-env-react\\src\\components\\ChronDialog.jsx":"2","C:\\Users\\matti\\Documents\\Progetti\\ELECTRON\\backup-env-react\\src\\theme\\muiTheme.js":"3","C:\\Users\\matti\\Documents\\Progetti\\ELECTRON\\backup-env-react\\src\\App.js":"4","C:\\Users\\matti\\Documents\\Progetti\\ELECTRON\\backup-env-react\\src\\theme\\palette.js":"5","C:\\Users\\matti\\Documents\\Progetti\\ELECTRON\\backup-env-react\\src\\components\\DoBackup.jsx":"6","C:\\Users\\matti\\Documents\\Progetti\\ELECTRON\\backup-env-react\\src\\components\\FloatingActionBotton.jsx":"7","C:\\Users\\matti\\Documents\\Progetti\\ELECTRON\\backup-env-react\\src\\components\\history.jsx":"8"},{"size":1249,"mtime":1653335489266,"results":"9","hashOfConfig":"10"},{"size":6803,"mtime":1653335506602,"results":"11","hashOfConfig":"10"},{"size":1741,"mtime":1652973082636,"results":"12","hashOfConfig":"10"},{"size":2334,"mtime":1653339160500,"results":"13","hashOfConfig":"10"},{"size":637,"mtime":1652973037918,"results":"14","hashOfConfig":"10"},{"size":3339,"mtime":1653336246708,"results":"15","hashOfConfig":"10"},{"size":1684,"mtime":1653339169655,"results":"16","hashOfConfig":"10"},{"size":784,"mtime":1653338587820,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r5gs1o",{"filePath":"20","messages":"21","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\Users\\matti\\Documents\\Progetti\\ELECTRON\\backup-env-react\\src\\index.jsx",[],"C:\\Users\\matti\\Documents\\Progetti\\ELECTRON\\backup-env-react\\src\\components\\ChronDialog.jsx",["37","38","39","40","41","42","43"],"import React from 'react'\r\nimport {  Dialog, Button } from 'react-windows-ui'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setBackup } from '../features/backupInfo'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nconst itemStyle = {\r\n  marginBottom: '10px'\r\n}\r\n\r\n\r\nexport default function ChronDialog({ isOpen, onClose, event }) {\r\n  const backup = useSelector(state => state.backupInfo)\r\n  const [second, setsecond] = React.useState(backup ? backup.second : '*');\r\n  const [minute, setminute] = React.useState(backup ? backup.minute : '*');\r\n  const [hour, sethour] = React.useState(backup ? backup.hour : '*');\r\n  const [dayMont, setdayMont] = React.useState(backup ? backup.dayMont : '*');\r\n  const [month, setmonth] = React.useState(backup ? backup.month : '*');\r\n  const [dayWeek, setdayWeek] = React.useState(backup ? backup.dayWeek : '*');\r\n  const height = window.outerHeight\r\n\r\n  const sendSetting = () => {\r\n    const data = `${second} ${minute} ${hour} ${dayMont} ${month} ${dayWeek}`\r\n    event.emit('setting',data)\r\n    onClose()\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      isVisible={isOpen}\r\n      // onBackdropPress={()=>{ setOpenSettingDialog(false)}}\r\n      style={{height: height+'px', width:'100%', color:'black', padding:'10px'}}\r\n      showDropShadow={true}>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h2>Seleziona le impostazini di configurazione</h2>\r\n        </div>\r\n        <hr />\r\n        <div className='row'>\r\n          <p className='col-4'>Secondi</p>\r\n          <FormControl className='col-8'>\r\n            <InputLabel id=\"second\">Secondi</InputLabel>\r\n            <Select\r\n              labelId=\"second\"\r\n              value={second}\r\n              label=\"Secondi\"\r\n              onChange={(e) => setsecond(e.target.value)}\r\n            >\r\n              {\r\n                seconds.map(v =>\r\n                  <MenuItem value={v}>{v}</MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className='row mt-3'>\r\n          <p className='col-4'>Minuti</p>          \r\n          <FormControl className='col-8'>\r\n            <InputLabel id=\"minute\">Minuti</InputLabel>\r\n            <Select\r\n              labelId=\"minute\"\r\n              value={minute}\r\n              label=\"Minuti\"\r\n              onChange={(e) => setminute(e.target.value)}\r\n            >\r\n              {\r\n                minutes.map(v =>\r\n                  <MenuItem value={v}>{v}</MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className='row mt-3'>\r\n          <p className='col-4'>Ore</p>\r\n          <FormControl className='col-8'>\r\n            <InputLabel id=\"hour\">Ore</InputLabel>\r\n            <Select\r\n              labelId=\"hour\"\r\n              value={hour}\r\n              label=\"Ore\"\r\n              onChange={(e) => sethour(e.target.value)}\r\n            >\r\n              {\r\n                hours.map(v =>\r\n                  <MenuItem value={v}>{v}</MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className='row mt-3'>\r\n          <p className='col-4'>Giorno del mese</p>\r\n          <FormControl className='col-8'>\r\n            <InputLabel id=\"dayMont\">Giorno del mese</InputLabel>\r\n            <Select\r\n              labelId=\"dayMont\"\r\n              value={dayMont}\r\n              label=\"Giorno del mese\"\r\n              onChange={(e) => setdayMont(e.target.value)}\r\n            >\r\n              {\r\n                dayMonths.map(v =>\r\n                  <MenuItem value={v}>{v}</MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className='row mt-3'>\r\n          <p className='col-4'>Mese</p>\r\n          <FormControl className='col-8'>\r\n            <InputLabel id=\"month\">Mese</InputLabel>\r\n            <Select\r\n              labelId=\"month\"\r\n              value={month}\r\n              label=\"Mese\"\r\n              onChange={(e) => setmonth(e.target.value)}\r\n            >\r\n              {\r\n                months.map(v =>\r\n                  <MenuItem value={v.value}>{v.label}</MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </div>       \r\n        <div className='row mt-3'>\r\n          <p className='col-4'>Giorno della settimana</p>\r\n          <FormControl className='col-8'>\r\n            <InputLabel id=\"deyWeek\">Giorno della settimana</InputLabel>\r\n            <Select\r\n              labelId=\"deyWeek\"\r\n              value={dayWeek}\r\n              label=\"GIorno della settimana\"\r\n              onChange={(e) => setdayWeek(e.target.value)}\r\n            >\r\n              {\r\n                dayWeeks.map(v =>\r\n                  <MenuItem value={v.value}>{v.label}</MenuItem>\r\n                )\r\n              }\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </div>      \r\n      <div style={{ display: 'flex', justifyContent: 'flex-end' }} className=\"mt-5\">\r\n        <Button\r\n          value=\"AGGIORNA LE IMPOSTAZIONI\"\r\n          type=\"primary\"\r\n          onClick={sendSetting} />\r\n        <div className=\"app-space-15\"></div>\r\n        <Button\r\n          value=\"Chiudi\"\r\n          onClick={onClose} />\r\n\r\n      </div>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\n\r\nconst seconds = new Array(60).fill(null).map((val, i) => {\r\n  if (i == 0)\r\n    return '*'\r\n  else\r\n    return i;\r\n})\r\n\r\nconst minutes = new Array(60).fill(null).map((val, i) => {\r\n  if (i == 0)\r\n    return '*'\r\n  else\r\n    return i;\r\n})\r\n\r\nconst hours = new Array(24).fill(null).map((val, i) => {\r\n  if (i == 0)\r\n    return '*'\r\n  else\r\n    return i;\r\n})\r\n\r\nconst dayMonths = new Array(32).fill(null).map((val, i) => {\r\n  if (i == 0)\r\n    return '*'\r\n  else\r\n    return i;\r\n})\r\n\r\nconst months = [\r\n  { label: '*', value: '*' },\r\n  { label: 'Gennaio', value: 1 },\r\n  { label: 'Febbraio', value: 2 },\r\n  { label: 'Marzo', value: 3 },\r\n  { label: 'Aprile', value: 4 },\r\n  { label: 'Maggio', value: 5 },\r\n  { label: 'Giugno', value: 6 },\r\n  { label: 'Luglio', value: 7 },\r\n  { label: 'Agosto', value: 8 },\r\n  { label: 'Settembre', value: 9 },\r\n  { label: 'Ottobre', value: 10 },\r\n  { label: 'Novembre', value: 11 },\r\n  { label: 'Dicembre', value: 12 },\r\n]\r\n\r\nconst dayWeeks = [\r\n  { label: '*', value: '*' },\r\n  { label: 'Lunedì',    value: 1 },\r\n  { label: 'Martedì',   value: 2 },\r\n  { label: 'Mercoledì', value: 3 },\r\n  { label: 'Giovedì',   value: 4 },\r\n  { label: 'Venerdì',   value: 5 },\r\n  { label: 'Sabato',    value: 6 },\r\n  { label: 'Domenica',  value: 7 },\r\n]","C:\\Users\\matti\\Documents\\Progetti\\ELECTRON\\backup-env-react\\src\\theme\\muiTheme.js",[],"C:\\Users\\matti\\Documents\\Progetti\\ELECTRON\\backup-env-react\\src\\App.js",["44"],"C:\\Users\\matti\\Documents\\Progetti\\ELECTRON\\backup-env-react\\src\\theme\\palette.js",[],"C:\\Users\\matti\\Documents\\Progetti\\ELECTRON\\backup-env-react\\src\\components\\DoBackup.jsx",["45","46","47","48","49"],"import React, { useState } from 'react'\r\nimport { Dialog, Button, InputText } from 'react-windows-ui'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\n\r\nconst { dialog } = window.require('electron').remote\r\n\r\nconst itemStyle = {\r\n  marginBottom: '10px'\r\n}\r\n\r\n\r\nexport default function ChronDialog({ isOpen, onClose, event }) {\r\n  const height = window.outerHeight\r\n  const [src, setsrc] = useState('')\r\n  const [dist, setdist] = useState('')\r\n\r\n  return (\r\n    <Dialog\r\n      isVisible={isOpen}\r\n      // onBackdropPress={()=>{ setOpenSettingDialog(false)}}\r\n      style={{ height: height + 'px', width: '100%', color: 'black', padding: '10px' }}\r\n      showDropShadow={true}>\r\n      <div className=\"container\">\r\n        <h2>Effettua un backup</h2><hr />\r\n        <div className=\"row\">\r\n          <div className=\"col-9\">\r\n            <InputText\r\n              width=\"400px\"\r\n              placeholder=\"Inserisci la sorgente\"\r\n              tooltip=\"Inserisci la sorgente\"\r\n              value={src}\r\n              onChange={(e) => { setsrc(e.target.value) }}\r\n            />\r\n          </div>\r\n          <div className=\"col-3 d-flex flex-row-reverse\">\r\n            <Button value='Browse' type=\"primary\" onClick={() => {\r\n              dialog.showOpenDialog({\r\n                properties: ['openDirectory']\r\n              }).then((filePaths) => {\r\n                console.log(filePaths)\r\n                if (filePaths.canceled) {\r\n                  return\r\n                }\r\n                else\r\n                  filePaths && setsrc(parseUrl(filePaths.filePaths[0]))\r\n              })\r\n            }} />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-9\">\r\n            <InputText\r\n              width=\"400px\"\r\n              placeholder=\"Inserisci la destinazione\"\r\n              tooltip=\"Inserisci la destinazione\"\r\n              value={dist}\r\n              onChange={(e) => { setdist(e.target.value) }}\r\n            />\r\n          </div>\r\n          <div className=\"col-3 d-flex flex-row-reverse mt-3\">\r\n            <Button value='Browse' type=\"primary\" onClick={() => {\r\n              dialog.showOpenDialog({\r\n                properties: ['openDirectory']\r\n              }).then((filePaths) => {                \r\n                if (filePaths.canceled){\r\n                  return\r\n                }\r\n                else\r\n                setdist(parseUrl(filePaths.filePaths[0]))\r\n              })\r\n            }} />\r\n          </div>\r\n        </div>\r\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }} className=\"mt-5\">\r\n          <Button\r\n            value=\"ESEGUI IL BACKUP\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              event.emit('backup', { src, dist })\r\n              onClose()\r\n            }} />\r\n          <div className=\"app-space-15\"></div>\r\n          <Button\r\n            value=\"Chiudi\"\r\n            onClick={onClose} />\r\n          \r\n        </div>\r\n      </div>      \r\n      \r\n    </Dialog>\r\n  )\r\n}\r\n\r\n/**\r\n * Parse \\ in / in path\r\n * \r\n * @params {string} path\r\n * @returns {string} path with \\ replaced by /\r\n */\r\nfunction parseUrl(path) {\r\n  return path.replace(/\\\\/g, '/')\r\n}","C:\\Users\\matti\\Documents\\Progetti\\ELECTRON\\backup-env-react\\src\\components\\FloatingActionBotton.jsx",["50"],"C:\\Users\\matti\\Documents\\Progetti\\ELECTRON\\backup-env-react\\src\\components\\history.jsx",["51","52","53"],"import React, { useState } from 'react'\r\nimport { Dialog, Button, InputText } from 'react-windows-ui'\r\n\r\nconst fs = window.require('fs')\r\nconst path = window.require('path')\r\n\r\nexport default function History({ isOpen, onClose }) {\r\n  const height = window.outerHeight\r\n  const backupPath = path.join(__dirname, '../')\r\n\r\n  return (\r\n    <Dialog\r\n      isVisible={isOpen}\r\n      // onBackdropPress={()=>{ setOpenSettingDialog(false)}}\r\n      style={{ height: height + 'px', width: '100%', color: 'black', padding: '10px' }}\r\n      showDropShadow={true}>\r\n      <div className=\"container\">\r\n        {backupPath}\r\n      </div>\r\n      <Button\r\n        value='Chiudi'\r\n        // type=\"primary\"\r\n        onClick={() => {\r\n          onClose()\r\n        }}\r\n      />\r\n    </Dialog>\r\n  )\r\n}\r\n",{"ruleId":"54","severity":1,"message":"55","line":3,"column":23,"nodeType":"56","messageId":"57","endLine":3,"endColumn":34},{"ruleId":"54","severity":1,"message":"58","line":4,"column":10,"nodeType":"56","messageId":"57","endLine":4,"endColumn":19},{"ruleId":"54","severity":1,"message":"59","line":10,"column":7,"nodeType":"56","messageId":"57","endLine":10,"endColumn":16},{"ruleId":"60","severity":1,"message":"61","line":168,"column":9,"nodeType":"62","messageId":"63","endLine":168,"endColumn":11},{"ruleId":"60","severity":1,"message":"61","line":175,"column":9,"nodeType":"62","messageId":"63","endLine":175,"endColumn":11},{"ruleId":"60","severity":1,"message":"61","line":182,"column":9,"nodeType":"62","messageId":"63","endLine":182,"endColumn":11},{"ruleId":"60","severity":1,"message":"61","line":189,"column":9,"nodeType":"62","messageId":"63","endLine":189,"endColumn":11},{"ruleId":"54","severity":1,"message":"64","line":4,"column":10,"nodeType":"56","messageId":"57","endLine":4,"endColumn":16},{"ruleId":"54","severity":1,"message":"65","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":18},{"ruleId":"54","severity":1,"message":"66","line":4,"column":8,"nodeType":"56","messageId":"57","endLine":4,"endColumn":16},{"ruleId":"54","severity":1,"message":"67","line":5,"column":8,"nodeType":"56","messageId":"57","endLine":5,"endColumn":19},{"ruleId":"54","severity":1,"message":"68","line":6,"column":8,"nodeType":"56","messageId":"57","endLine":6,"endColumn":14},{"ruleId":"54","severity":1,"message":"59","line":11,"column":7,"nodeType":"56","messageId":"57","endLine":11,"endColumn":16},{"ruleId":"54","severity":1,"message":"69","line":10,"column":10,"nodeType":"56","messageId":"57","endLine":10,"endColumn":25},{"ruleId":"54","severity":1,"message":"70","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"71","line":2,"column":26,"nodeType":"56","messageId":"57","endLine":2,"endColumn":35},{"ruleId":"54","severity":1,"message":"72","line":4,"column":7,"nodeType":"56","messageId":"57","endLine":4,"endColumn":9},"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'setBackup' is defined but never used.","'itemStyle' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Dialog' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'AddAlertRounded' is defined but never used.","'useState' is defined but never used.","'InputText' is defined but never used.","'fs' is assigned a value but never used."]